diff --git a/src/java/org/apache/hadoop/mapred/TaskTracker.java b/src/java/org/apache/hadoop/mapred/TaskTracker.java
index 0dd1124..dd2e6fc 100644
--- a/src/java/org/apache/hadoop/mapred/TaskTracker.java
+++ b/src/java/org/apache/hadoop/mapred/TaskTracker.java
@@ -625,6 +625,9 @@ public class TaskTracker
        fConf.get(TT_DNS_NAMESERVER,"default"));
     }
  
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Initializing Task Tracker: " + toString());
+    }
     // Check local disk, start async disk service, and clean up all 
     // local directories.
     checkLocalDirs(this.fConf.getLocalDirs());
@@ -1506,7 +1509,7 @@ public class TaskTracker
             try {
               jobClient.reportTaskTrackerError(taskTrackerName, null, msg);
             } catch(Exception e ) {
-              LOG.info("Problem reporting to jobtracker: " + e);
+              LOG.info("Problem reporting to jobtracker: " + e, e);
             }
             return State.DENIED;
           }
@@ -1517,6 +1520,10 @@ public class TaskTracker
           }
           systemDirectory = new Path(dir);
           systemFS = systemDirectory.getFileSystem(fConf);
+          if(LOG.isDebugEnabled()) {
+            LOG.debug("Starting " + toString());
+            LOG.debug("System directory is " + systemDirectory);
+          }
         }
         
         // Send the heartbeat and process the jobtracker's directives
@@ -2348,7 +2355,7 @@ public class TaskTracker
     } catch (Throwable e) {
       String msg = ("Error initializing " + tip.getTask().getTaskID() + 
                     ":\n" + StringUtils.stringifyException(e));
-      LOG.warn(msg);
+      LOG.warn(msg, e);
       tip.reportDiagnosticInfo(msg);
       try {
         tip.kill(true);
@@ -3924,6 +3931,23 @@ public class TaskTracker
   }
 
   /**
+   * Return a string that is useful in logs and debugging
+   *
+   * @return state of the task tracker
+   */
+  @Override
+  public String toString() {
+    return super.toString()
+        + " "
+        + (server != null ?
+          (server.toString() + " ") : "")
+        + (taskReportAddress != null ?
+          ("rpc://" + taskReportAddress + "/ ") : "")
+        + (jobTrackAddr != null ?
+          (" bound to JobTracker " + jobTrackAddr + " ") : "");
+  }
+
+  /**
    * Is the TaskMemoryManager Enabled on this system?
    * @return true if enabled, false otherwise.
    */
@@ -4099,7 +4123,7 @@ public class TaskTracker
       try {
         purgeTask(tip, wasFailure); // Marking it as failed/killed.
       } catch (IOException ioe) {
-        LOG.warn("Couldn't purge the task of " + tid + ". Error : " + ioe);
+        LOG.warn("Couldn't purge the task of " + tid + ". Error : " + ioe, ioe);
       }
     }
   }
